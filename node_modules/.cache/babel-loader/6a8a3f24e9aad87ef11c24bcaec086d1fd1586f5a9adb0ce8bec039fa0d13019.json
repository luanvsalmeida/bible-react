{"ast":null,"code":"export const fetchVerses = async (searchTerm = '') => {\n  console.log(searchTerm);\n  const regex = /^([A-Za-zÀ-ÖØ-öø-ÿ\\s]+?)\\s+(\\d+)[\\s:.]?\\s*(\\d+)$/;\n  const result = searchTerm.match(regex);\n  if (!result) {\n    console.error(\"Formato inválido para a busca de versículo.\");\n    return [];\n  }\n  try {\n    // Primeira tentativa com a tradução \"almeida\" (Especificamente para o livro Cânticos/Song of Solomon)\n    let response = await fetch(`https://bible-api.com/${result[1].trim()}%20${result[2]}:${result[3]}?translation=almeida`);\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    } else {\n      // Segunda tentativa sem a tradução \"almeida\"\n      console.warn(\"Tradução 'Almeida' não encontrada\");\n      response = await fetch(`https://bible-api.com/${result[1].trim()}%20${result[2]}:${result[3]}`);\n      if (response.ok) {\n        const data = await response.json();\n        return data;\n      } else {\n        console.error('Erro ao buscar versículo sem tradução:');\n        return [];\n      }\n    }\n  } catch (error) {\n    console.error('Erro ao buscar versículos:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["fetchVerses","searchTerm","console","log","regex","result","match","error","response","fetch","trim","ok","data","json","warn"],"sources":["C:/Users/luans/OneDrive/Documentos/ADS/1/FPROG/atividades/Utfpr_fullstack-api/src/services/api.js"],"sourcesContent":["export const fetchVerses = async (searchTerm = '') => {\r\n    console.log(searchTerm);\r\n    const regex = /^([A-Za-zÀ-ÖØ-öø-ÿ\\s]+?)\\s+(\\d+)[\\s:.]?\\s*(\\d+)$/;\r\n    const result = searchTerm.match(regex);\r\n\r\n    if (!result) {\r\n        console.error(\"Formato inválido para a busca de versículo.\");\r\n        return [];\r\n    }\r\n\r\n    try {\r\n        // Primeira tentativa com a tradução \"almeida\" (Especificamente para o livro Cânticos/Song of Solomon)\r\n        let response = await fetch(`https://bible-api.com/${result[1].trim()}%20${result[2]}:${result[3]}?translation=almeida`);\r\n        \r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data;\r\n        } else {\r\n            // Segunda tentativa sem a tradução \"almeida\"\r\n            console.warn(\"Tradução 'Almeida' não encontrada\");\r\n            response = await fetch(`https://bible-api.com/${result[1].trim()}%20${result[2]}:${result[3]}`);\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            } else {\r\n                console.error('Erro ao buscar versículo sem tradução:');\r\n                return [];\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error('Erro ao buscar versículos:', error);\r\n        return [];\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,UAAU,GAAG,EAAE,KAAK;EAClDC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EACvB,MAAMG,KAAK,GAAG,kDAAkD;EAChE,MAAMC,MAAM,GAAGJ,UAAU,CAACK,KAAK,CAACF,KAAK,CAAC;EAEtC,IAAI,CAACC,MAAM,EAAE;IACTH,OAAO,CAACK,KAAK,CAAC,6CAA6C,CAAC;IAC5D,OAAO,EAAE;EACb;EAEA,IAAI;IACA;IACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBJ,MAAM,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC,MAAML,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,sBAAsB,CAAC;IAEvH,IAAIG,QAAQ,CAACG,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC,MAAM;MACH;MACAV,OAAO,CAACY,IAAI,CAAC,mCAAmC,CAAC;MACjDN,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBJ,MAAM,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC,MAAML,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;MAE/F,IAAIG,QAAQ,CAACG,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI;MACf,CAAC,MAAM;QACHV,OAAO,CAACK,KAAK,CAAC,wCAAwC,CAAC;QACvD,OAAO,EAAE;MACb;IACJ;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}